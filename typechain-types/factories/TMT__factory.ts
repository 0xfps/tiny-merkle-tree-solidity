/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { TMT, TMTInterface } from "../TMT";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "initLeaf",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
    ],
    name: "LeafAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "addLeaf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "last32Roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405264010000000064ffffffffff1660809064ffffffffff1681525034801561002a57600080fd5b50604051610f4f380380610f4f833981810160405281019061004c919061019e565b80600081905073__$3b95fa720ec38d9edcd1ad06cd0807af45$__639d036e7160405180602001604052808460001c8152506040518263ffffffff1660e01b815260040161009a9190610280565b602060405180830381865af41580156100b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100db91906102c7565b60001b6022819055506001602160006101000a81548164ffffffffff021916908364ffffffffff1602179055506001602360008060ff16815260200190815260200160002060006101000a81548164ffffffffff021916908364ffffffffff16021790555080602460008060ff168152602001908152602001600020819055505050506102f4565b600080fd5b6000819050919050565b61017b81610168565b811461018657600080fd5b50565b60008151905061019881610172565b92915050565b6000602082840312156101b4576101b3610163565b5b60006101c284828501610189565b91505092915050565b600060019050919050565b600081905092915050565b6000819050919050565b6000819050919050565b6101fe816101eb565b82525050565b600061021083836101f5565b60208301905092915050565b6000602082019050919050565b610232816101cb565b61023c81846101d6565b9250610247826101e1565b8060005b8381101561027857815161025f8782610204565b965061026a8361021c565b92505060018101905061024b565b505050505050565b60006020820190506102956000830184610229565b92915050565b6102a4816101eb565b81146102af57600080fd5b50565b6000815190506102c18161029b565b92915050565b6000602082840312156102dd576102dc610163565b5b60006102eb848285016102b2565b91505092915050565b608051610c4061030f60003960006101110152610c406000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063d98b4f5e14610046578063ea94934614610076578063ebf0c71714610092575b600080fd5b610060600480360381019061005b9190610788565b6100b0565b60405161006d91906107ce565b60405180910390f35b610090600480360381019061008b9190610815565b6100cb565b005b61009a610105565b6040516100a791906107ce565b60405180910390f35b600181602081106100c057600080fd5b016000915090505481565b6100d48161010b565b50807fe031a2a9091bffbdf32f00286ac809f11de72b5b10618b213be2372da7d9257060405160405180910390a250565b60225481565b600060017f000000000000000000000000000000000000000000000000000000000000000061013a9190610882565b64ffffffffff166021600081819054906101000a900464ffffffffff1680929190610164906108bb565b91906101000a81548164ffffffffff021916908364ffffffffff16021790555064ffffffffff16036101cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c290610945565b60405180910390fd5b602160009054906101000a900464ffffffffff16602360008060ff16815260200190815260200160002060006101000a81548164ffffffffff021916908364ffffffffff1602179055506000602160009054906101000a900464ffffffffff1690506000808490505b60028364ffffffffff161061027e5761024e838383610299565b9050600260018461025f9190610882565b6102699190610994565b92508180610276906109d2565b925050610234565b80935061028a84610693565b83602281905550505050919050565b600080600060028664ffffffffff160361044b576102d0602460008760ff1660ff168152602001908152602001600020548561072e565b809250819350505073__$bd69ea624114fb48ec2d96990b1b041dcf$__63561558fe60405180604001604052808560001c81526020018460001c8152506040518263ffffffff1660e01b81526004016103299190610aa6565b602060405180830381865af4158015610346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a9190610ad6565b60001b925082602460006001886103819190610b03565b60ff1660ff168152602001908152602001600020819055506000602360006001886103ac9190610b03565b60ff1660ff16815260200190815260200160002060009054906101000a900464ffffffffff1664ffffffffff160361044657602360006001876103ef9190610b03565b60ff1660ff168152602001908152602001600020600081819054906101000a900464ffffffffff1680929190610424906108bb565b91906101000a81548164ffffffffff021916908364ffffffffff160217905550505b610532565b600160028761045a9190610b38565b64ffffffffff160361046e57839250610531565b610491602460008760ff1660ff168152602001908152602001600020548561072e565b809250819350505073__$bd69ea624114fb48ec2d96990b1b041dcf$__63561558fe60405180604001604052808560001c81526020018460001c8152506040518263ffffffff1660e01b81526004016104ea9190610aa6565b602060405180830381865af4158015610507573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052b9190610ad6565b60001b92505b5b60008560ff16036105605783602460008760ff1660ff1681526020019081526020016000208190555061068a565b6000602360008760ff1660ff16815260200190815260200160002060009054906101000a900464ffffffffff1690506000602360006001896105a29190610b69565b60ff1660ff16815260200190815260200160002060009054906101000a900464ffffffffff1690508064ffffffffff1660026001846105e19190610882565b6105eb9190610b9e565b64ffffffffff160361068757602360008860ff1660ff168152602001908152602001600020600081819054906101000a900464ffffffffff1680929190610631906108bb565b91906101000a81548164ffffffffff021916908364ffffffffff1602179055505060028864ffffffffff16146106675784610669565b855b602460008960ff1660ff168152602001908152602001600020819055505b50505b50509392505050565b602060ff1660008054906101000a900460ff1660ff16036106ca5760008060006101000a81548160ff021916908360ff1602179055505b80600160008054906101000a900460ff1660ff16602081106106ef576106ee610bdb565b5b018190555060008081819054906101000a900460ff1680929190610712906109d2565b91906101000a81548160ff021916908360ff1602179055505050565b60008082841061073f578284610742565b83835b915091509250929050565b600080fd5b6000819050919050565b61076581610752565b811461077057600080fd5b50565b6000813590506107828161075c565b92915050565b60006020828403121561079e5761079d61074d565b5b60006107ac84828501610773565b91505092915050565b6000819050919050565b6107c8816107b5565b82525050565b60006020820190506107e360008301846107bf565b92915050565b6107f2816107b5565b81146107fd57600080fd5b50565b60008135905061080f816107e9565b92915050565b60006020828403121561082b5761082a61074d565b5b600061083984828501610800565b91505092915050565b600064ffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061088d82610842565b915061089883610842565b9250828201905064ffffffffff8111156108b5576108b4610853565b5b92915050565b60006108c682610842565b915064ffffffffff82036108dd576108dc610853565b5b600182019050919050565b600082825260208201905092915050565b7f547265652046756c6c2100000000000000000000000000000000000000000000600082015250565b600061092f600a836108e8565b915061093a826108f9565b602082019050919050565b6000602082019050818103600083015261095e81610922565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061099f82610842565b91506109aa83610842565b9250826109ba576109b9610965565b5b828204905092915050565b600060ff82169050919050565b60006109dd826109c5565b915060ff82036109f0576109ef610853565b5b600182019050919050565b600060029050919050565b600081905092915050565b6000819050919050565b610a2481610752565b82525050565b6000610a368383610a1b565b60208301905092915050565b6000602082019050919050565b610a58816109fb565b610a628184610a06565b9250610a6d82610a11565b8060005b83811015610a9e578151610a858782610a2a565b9650610a9083610a42565b925050600181019050610a71565b505050505050565b6000604082019050610abb6000830184610a4f565b92915050565b600081519050610ad08161075c565b92915050565b600060208284031215610aec57610aeb61074d565b5b6000610afa84828501610ac1565b91505092915050565b6000610b0e826109c5565b9150610b19836109c5565b9250828201905060ff811115610b3257610b31610853565b5b92915050565b6000610b4382610842565b9150610b4e83610842565b925082610b5e57610b5d610965565b5b828206905092915050565b6000610b74826109c5565b9150610b7f836109c5565b9250828203905060ff811115610b9857610b97610853565b5b92915050565b6000610ba982610842565b9150610bb483610842565b9250828202610bc281610842565b9150808214610bd457610bd3610853565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212207565aff5f9c92ed314be9fe7cd79ee72c8ed42dbeac5dd54e2e3f966e856ddf764736f6c634300081c0033";

type TMTConstructorParams =
  | [linkLibraryAddresses: TMTLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TMTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TMT__factory extends ContractFactory {
  constructor(...args: TMTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, TMT__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: TMTLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3b95fa720ec38d9edcd1ad06cd0807af45\\$__", "g"),
      linkLibraryAddresses["src/lib/PoseidonHash.sol:PoseidonT2"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$bd69ea624114fb48ec2d96990b1b041dcf\\$__", "g"),
      linkLibraryAddresses["src/lib/PoseidonHash.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    initLeaf: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initLeaf, overrides || {});
  }
  override deploy(
    initLeaf: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initLeaf, overrides || {}) as Promise<
      TMT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TMT__factory {
    return super.connect(runner) as TMT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TMTInterface {
    return new Interface(_abi) as TMTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TMT {
    return new Contract(address, _abi, runner) as unknown as TMT;
  }
}

export interface TMTLibraryAddresses {
  ["src/lib/PoseidonHash.sol:PoseidonT2"]: string;
  ["src/lib/PoseidonHash.sol:PoseidonT3"]: string;
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { TMT, TMTInterface } from "../TMT";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "initLeaf",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
    ],
    name: "LeafAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "addLeaf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLast64Roots",
    outputs: [
      {
        internalType: "bytes32[64]",
        name: "",
        type: "bytes32[64]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405264010000000064ffffffffff1660809064ffffffffff1681525034801561002a57600080fd5b50604051611015380380611015833981810160405281019061004c919061019e565b80600081905073__$3b95fa720ec38d9edcd1ad06cd0807af45$__639d036e7160405180602001604052808460001c8152506040518263ffffffff1660e01b815260040161009a9190610280565b602060405180830381865af41580156100b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100db91906102c7565b60001b6042819055506001604160006101000a81548164ffffffffff021916908364ffffffffff1602179055506001604360008060ff16815260200190815260200160002060006101000a81548164ffffffffff021916908364ffffffffff16021790555080604460008060ff168152602001908152602001600020819055505050506102f4565b600080fd5b6000819050919050565b61017b81610168565b811461018657600080fd5b50565b60008151905061019881610172565b92915050565b6000602082840312156101b4576101b3610163565b5b60006101c284828501610189565b91505092915050565b600060019050919050565b600081905092915050565b6000819050919050565b6000819050919050565b6101fe816101eb565b82525050565b600061021083836101f5565b60208301905092915050565b6000602082019050919050565b610232816101cb565b61023c81846101d6565b9250610247826101e1565b8060005b8381101561027857815161025f8782610204565b965061026a8361021c565b92505060018101905061024b565b505050505050565b60006020820190506102956000830184610229565b92915050565b6102a4816101eb565b81146102af57600080fd5b50565b6000815190506102c18161029b565b92915050565b6000602082840312156102dd576102dc610163565b5b60006102eb848285016102b2565b91505092915050565b608051610d0661030f600039600061012f0152610d066000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063ea94934614610046578063ebf0c71714610062578063fdd4f02514610080575b600080fd5b610060600480360381019061005b91906107c9565b61009e565b005b61006a6100d8565b6040516100779190610805565b60405180910390f35b6100886100de565b60405161009591906108cb565b60405180910390f35b6100a781610129565b50807fe031a2a9091bffbdf32f00286ac809f11de72b5b10618b213be2372da7d9257060405160405180910390a250565b60425481565b6100e661076b565b600160408060200260405190810160405280929190826040801561011f576020028201915b81548152602001906001019080831161010b575b5050505050905090565b600060017f00000000000000000000000000000000000000000000000000000000000000006101589190610927565b64ffffffffff166041600081819054906101000a900464ffffffffff168092919061018290610960565b91906101000a81548164ffffffffff021916908364ffffffffff16021790555064ffffffffff16036101e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e0906109ea565b60405180910390fd5b604160009054906101000a900464ffffffffff16604360008060ff16815260200190815260200160002060006101000a81548164ffffffffff021916908364ffffffffff1602179055506000604160009054906101000a900464ffffffffff1690506000808490505b60028364ffffffffff161061029c5761026c8383836102b7565b9050600260018461027d9190610927565b6102879190610a39565b9250818061029490610a77565b925050610252565b8093506102a8846106b1565b83604281905550505050919050565b600080600060028664ffffffffff1603610469576102ee604460008760ff1660ff168152602001908152602001600020548561074c565b809250819350505073__$bd69ea624114fb48ec2d96990b1b041dcf$__63561558fe60405180604001604052808560001c81526020018460001c8152506040518263ffffffff1660e01b81526004016103479190610b55565b602060405180830381865af4158015610364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103889190610b9c565b60001b9250826044600060018861039f9190610bc9565b60ff1660ff168152602001908152602001600020819055506000604360006001886103ca9190610bc9565b60ff1660ff16815260200190815260200160002060009054906101000a900464ffffffffff1664ffffffffff1603610464576043600060018761040d9190610bc9565b60ff1660ff168152602001908152602001600020600081819054906101000a900464ffffffffff168092919061044290610960565b91906101000a81548164ffffffffff021916908364ffffffffff160217905550505b610550565b60016002876104789190610bfe565b64ffffffffff160361048c5783925061054f565b6104af604460008760ff1660ff168152602001908152602001600020548561074c565b809250819350505073__$bd69ea624114fb48ec2d96990b1b041dcf$__63561558fe60405180604001604052808560001c81526020018460001c8152506040518263ffffffff1660e01b81526004016105089190610b55565b602060405180830381865af4158015610525573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105499190610b9c565b60001b92505b5b60008560ff160361057e5783604460008760ff1660ff168152602001908152602001600020819055506106a8565b6000604360008760ff1660ff16815260200190815260200160002060009054906101000a900464ffffffffff1690506000604360006001896105c09190610c2f565b60ff1660ff16815260200190815260200160002060009054906101000a900464ffffffffff1690508064ffffffffff1660026001846105ff9190610927565b6106099190610c64565b64ffffffffff16036106a557604360008860ff1660ff168152602001908152602001600020600081819054906101000a900464ffffffffff168092919061064f90610960565b91906101000a81548164ffffffffff021916908364ffffffffff1602179055505060028864ffffffffff16146106855784610687565b855b604460008960ff1660ff168152602001908152602001600020819055505b50505b50509392505050565b604060ff1660008054906101000a900460ff1660ff16036106e85760008060006101000a81548160ff021916908360ff1602179055505b80600160008054906101000a900460ff1660ff166040811061070d5761070c610ca1565b5b018190555060008081819054906101000a900460ff168092919061073090610a77565b91906101000a81548160ff021916908360ff1602179055505050565b60008082841061075d578284610760565b83835b915091509250929050565b604051806108000160405280604090602082028036833780820191505090505090565b600080fd5b6000819050919050565b6107a681610793565b81146107b157600080fd5b50565b6000813590506107c38161079d565b92915050565b6000602082840312156107df576107de61078e565b5b60006107ed848285016107b4565b91505092915050565b6107ff81610793565b82525050565b600060208201905061081a60008301846107f6565b92915050565b600060409050919050565b600081905092915050565b6000819050919050565b61084981610793565b82525050565b600061085b8383610840565b60208301905092915050565b6000602082019050919050565b61087d81610820565b610887818461082b565b925061089282610836565b8060005b838110156108c35781516108aa878261084f565b96506108b583610867565b925050600181019050610896565b505050505050565b6000610800820190506108e16000830184610874565b92915050565b600064ffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610932826108e7565b915061093d836108e7565b9250828201905064ffffffffff81111561095a576109596108f8565b5b92915050565b600061096b826108e7565b915064ffffffffff8203610982576109816108f8565b5b600182019050919050565b600082825260208201905092915050565b7f547265652046756c6c2100000000000000000000000000000000000000000000600082015250565b60006109d4600a8361098d565b91506109df8261099e565b602082019050919050565b60006020820190508181036000830152610a03816109c7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a44826108e7565b9150610a4f836108e7565b925082610a5f57610a5e610a0a565b5b828204905092915050565b600060ff82169050919050565b6000610a8282610a6a565b915060ff8203610a9557610a946108f8565b5b600182019050919050565b600060029050919050565b600081905092915050565b6000819050919050565b6000819050919050565b610ad381610ac0565b82525050565b6000610ae58383610aca565b60208301905092915050565b6000602082019050919050565b610b0781610aa0565b610b118184610aab565b9250610b1c82610ab6565b8060005b83811015610b4d578151610b348782610ad9565b9650610b3f83610af1565b925050600181019050610b20565b505050505050565b6000604082019050610b6a6000830184610afe565b92915050565b610b7981610ac0565b8114610b8457600080fd5b50565b600081519050610b9681610b70565b92915050565b600060208284031215610bb257610bb161078e565b5b6000610bc084828501610b87565b91505092915050565b6000610bd482610a6a565b9150610bdf83610a6a565b9250828201905060ff811115610bf857610bf76108f8565b5b92915050565b6000610c09826108e7565b9150610c14836108e7565b925082610c2457610c23610a0a565b5b828206905092915050565b6000610c3a82610a6a565b9150610c4583610a6a565b9250828203905060ff811115610c5e57610c5d6108f8565b5b92915050565b6000610c6f826108e7565b9150610c7a836108e7565b9250828202610c88816108e7565b9150808214610c9a57610c996108f8565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220e399aa225a7f0a83586abd880c191b4ba2f93b828262ab73c5d364159d2fea4d64736f6c634300081c0033";

type TMTConstructorParams =
  | [linkLibraryAddresses: TMTLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TMTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TMT__factory extends ContractFactory {
  constructor(...args: TMTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, TMT__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: TMTLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3b95fa720ec38d9edcd1ad06cd0807af45\\$__", "g"),
      linkLibraryAddresses["src/lib/PoseidonHash.sol:PoseidonT2"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$bd69ea624114fb48ec2d96990b1b041dcf\\$__", "g"),
      linkLibraryAddresses["src/lib/PoseidonHash.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    initLeaf: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initLeaf, overrides || {});
  }
  override deploy(
    initLeaf: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initLeaf, overrides || {}) as Promise<
      TMT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TMT__factory {
    return super.connect(runner) as TMT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TMTInterface {
    return new Interface(_abi) as TMTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TMT {
    return new Contract(address, _abi, runner) as unknown as TMT;
  }
}

export interface TMTLibraryAddresses {
  ["src/lib/PoseidonHash.sol:PoseidonT2"]: string;
  ["src/lib/PoseidonHash.sol:PoseidonT3"]: string;
}

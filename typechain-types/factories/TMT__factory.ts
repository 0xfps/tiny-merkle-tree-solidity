/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { TMT, TMTInterface } from "../TMT";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "initLeaf",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
    ],
    name: "LeafAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "addLeaf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLast64Roots",
    outputs: [
      {
        internalType: "bytes32[64]",
        name: "",
        type: "bytes32[64]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint40",
        name: "",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405264010000000064ffffffffff1660809064ffffffffff1681525034801561002a57600080fd5b5060405161107f38038061107f833981810160405281019061004c919061019e565b80600081905073__$3b95fa720ec38d9edcd1ad06cd0807af45$__639d036e7160405180602001604052808460001c8152506040518263ffffffff1660e01b815260040161009a9190610280565b602060405180830381865af41580156100b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100db91906102c7565b60001b6042819055506001604160006101000a81548164ffffffffff021916908364ffffffffff1602179055506001604360008060ff16815260200190815260200160002060006101000a81548164ffffffffff021916908364ffffffffff16021790555080604460008060ff168152602001908152602001600020819055505050506102f4565b600080fd5b6000819050919050565b61017b81610168565b811461018657600080fd5b50565b60008151905061019881610172565b92915050565b6000602082840312156101b4576101b3610163565b5b60006101c284828501610189565b91505092915050565b600060019050919050565b600081905092915050565b6000819050919050565b6000819050919050565b6101fe816101eb565b82525050565b600061021083836101f5565b60208301905092915050565b6000602082019050919050565b610232816101cb565b61023c81846101d6565b9250610247826101e1565b8060005b8381101561027857815161025f8782610204565b965061026a8361021c565b92505060018101905061024b565b505050505050565b60006020820190506102956000830184610229565b92915050565b6102a4816101eb565b81146102af57600080fd5b50565b6000815190506102c18161029b565b92915050565b6000602082840312156102dd576102dc610163565b5b60006102eb848285016102b2565b91505092915050565b608051610d7061030f600039600061016f0152610d706000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631f7b6d3214610051578063ea9493461461006f578063ebf0c7171461008b578063fdd4f025146100a9575b600080fd5b6100596100c7565b60405161006691906107ee565b60405180910390f35b61008960048036038101906100849190610844565b6100de565b005b610093610118565b6040516100a09190610880565b60405180910390f35b6100b161011e565b6040516100be9190610946565b60405180910390f35b604160009054906101000a900464ffffffffff1681565b6100e781610169565b50807fe031a2a9091bffbdf32f00286ac809f11de72b5b10618b213be2372da7d9257060405160405180910390a250565b60425481565b6101266107ab565b600160408060200260405190810160405280929190826040801561015f576020028201915b81548152602001906001019080831161014b575b5050505050905090565b600060017f00000000000000000000000000000000000000000000000000000000000000006101989190610991565b64ffffffffff166041600081819054906101000a900464ffffffffff16809291906101c2906109ca565b91906101000a81548164ffffffffff021916908364ffffffffff16021790555064ffffffffff1603610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610a54565b60405180910390fd5b604160009054906101000a900464ffffffffff16604360008060ff16815260200190815260200160002060006101000a81548164ffffffffff021916908364ffffffffff1602179055506000604160009054906101000a900464ffffffffff1690506000808490505b60028364ffffffffff16106102dc576102ac8383836102f7565b905060026001846102bd9190610991565b6102c79190610aa3565b925081806102d490610ae1565b925050610292565b8093506102e8846106f1565b83604281905550505050919050565b600080600060028664ffffffffff16036104a95761032e604460008760ff1660ff168152602001908152602001600020548561078c565b809250819350505073__$bd69ea624114fb48ec2d96990b1b041dcf$__63561558fe60405180604001604052808560001c81526020018460001c8152506040518263ffffffff1660e01b81526004016103879190610bbf565b602060405180830381865af41580156103a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c89190610c06565b60001b925082604460006001886103df9190610c33565b60ff1660ff1681526020019081526020016000208190555060006043600060018861040a9190610c33565b60ff1660ff16815260200190815260200160002060009054906101000a900464ffffffffff1664ffffffffff16036104a4576043600060018761044d9190610c33565b60ff1660ff168152602001908152602001600020600081819054906101000a900464ffffffffff1680929190610482906109ca565b91906101000a81548164ffffffffff021916908364ffffffffff160217905550505b610590565b60016002876104b89190610c68565b64ffffffffff16036104cc5783925061058f565b6104ef604460008760ff1660ff168152602001908152602001600020548561078c565b809250819350505073__$bd69ea624114fb48ec2d96990b1b041dcf$__63561558fe60405180604001604052808560001c81526020018460001c8152506040518263ffffffff1660e01b81526004016105489190610bbf565b602060405180830381865af4158015610565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105899190610c06565b60001b92505b5b60008560ff16036105be5783604460008760ff1660ff168152602001908152602001600020819055506106e8565b6000604360008760ff1660ff16815260200190815260200160002060009054906101000a900464ffffffffff1690506000604360006001896106009190610c99565b60ff1660ff16815260200190815260200160002060009054906101000a900464ffffffffff1690508064ffffffffff16600260018461063f9190610991565b6106499190610cce565b64ffffffffff16036106e557604360008860ff1660ff168152602001908152602001600020600081819054906101000a900464ffffffffff168092919061068f906109ca565b91906101000a81548164ffffffffff021916908364ffffffffff1602179055505060028864ffffffffff16146106c557846106c7565b855b604460008960ff1660ff168152602001908152602001600020819055505b50505b50509392505050565b604060ff1660008054906101000a900460ff1660ff16036107285760008060006101000a81548160ff021916908360ff1602179055505b80600160008054906101000a900460ff1660ff166040811061074d5761074c610d0b565b5b018190555060008081819054906101000a900460ff168092919061077090610ae1565b91906101000a81548160ff021916908360ff1602179055505050565b60008082841061079d5782846107a0565b83835b915091509250929050565b604051806108000160405280604090602082028036833780820191505090505090565b600064ffffffffff82169050919050565b6107e8816107ce565b82525050565b600060208201905061080360008301846107df565b92915050565b600080fd5b6000819050919050565b6108218161080e565b811461082c57600080fd5b50565b60008135905061083e81610818565b92915050565b60006020828403121561085a57610859610809565b5b60006108688482850161082f565b91505092915050565b61087a8161080e565b82525050565b60006020820190506108956000830184610871565b92915050565b600060409050919050565b600081905092915050565b6000819050919050565b6108c48161080e565b82525050565b60006108d683836108bb565b60208301905092915050565b6000602082019050919050565b6108f88161089b565b61090281846108a6565b925061090d826108b1565b8060005b8381101561093e57815161092587826108ca565b9650610930836108e2565b925050600181019050610911565b505050505050565b60006108008201905061095c60008301846108ef565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061099c826107ce565b91506109a7836107ce565b9250828201905064ffffffffff8111156109c4576109c3610962565b5b92915050565b60006109d5826107ce565b915064ffffffffff82036109ec576109eb610962565b5b600182019050919050565b600082825260208201905092915050565b7f547265652046756c6c2100000000000000000000000000000000000000000000600082015250565b6000610a3e600a836109f7565b9150610a4982610a08565b602082019050919050565b60006020820190508181036000830152610a6d81610a31565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610aae826107ce565b9150610ab9836107ce565b925082610ac957610ac8610a74565b5b828204905092915050565b600060ff82169050919050565b6000610aec82610ad4565b915060ff8203610aff57610afe610962565b5b600182019050919050565b600060029050919050565b600081905092915050565b6000819050919050565b6000819050919050565b610b3d81610b2a565b82525050565b6000610b4f8383610b34565b60208301905092915050565b6000602082019050919050565b610b7181610b0a565b610b7b8184610b15565b9250610b8682610b20565b8060005b83811015610bb7578151610b9e8782610b43565b9650610ba983610b5b565b925050600181019050610b8a565b505050505050565b6000604082019050610bd46000830184610b68565b92915050565b610be381610b2a565b8114610bee57600080fd5b50565b600081519050610c0081610bda565b92915050565b600060208284031215610c1c57610c1b610809565b5b6000610c2a84828501610bf1565b91505092915050565b6000610c3e82610ad4565b9150610c4983610ad4565b9250828201905060ff811115610c6257610c61610962565b5b92915050565b6000610c73826107ce565b9150610c7e836107ce565b925082610c8e57610c8d610a74565b5b828206905092915050565b6000610ca482610ad4565b9150610caf83610ad4565b9250828203905060ff811115610cc857610cc7610962565b5b92915050565b6000610cd9826107ce565b9150610ce4836107ce565b9250828202610cf2816107ce565b9150808214610d0457610d03610962565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212208695689359c53ded90da52a33f9822b5e671fc222fd29b1506c28cf7f579be7964736f6c634300081c0033";

type TMTConstructorParams =
  | [linkLibraryAddresses: TMTLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TMTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TMT__factory extends ContractFactory {
  constructor(...args: TMTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, TMT__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: TMTLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$3b95fa720ec38d9edcd1ad06cd0807af45\\$__", "g"),
      linkLibraryAddresses["src/lib/PoseidonHash.sol:PoseidonT2"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$bd69ea624114fb48ec2d96990b1b041dcf\\$__", "g"),
      linkLibraryAddresses["src/lib/PoseidonHash.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    initLeaf: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initLeaf, overrides || {});
  }
  override deploy(
    initLeaf: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initLeaf, overrides || {}) as Promise<
      TMT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TMT__factory {
    return super.connect(runner) as TMT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TMTInterface {
    return new Interface(_abi) as TMTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TMT {
    return new Contract(address, _abi, runner) as unknown as TMT;
  }
}

export interface TMTLibraryAddresses {
  ["src/lib/PoseidonHash.sol:PoseidonT2"]: string;
  ["src/lib/PoseidonHash.sol:PoseidonT3"]: string;
}
